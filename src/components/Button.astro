---
interface Props {
  href: string;
  color?: string;
}

const { href, color } = Astro.props;
---

<a class:list={["btn-pressable", color]} {href}>
  <slot />
</a>

<style>
  .btn-pressable {
    font-family: var(--font-brand);
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    flex-wrap: nowrap;
    color: var(--color-gray-800);
    border: 2px solid var(--color-gray-800);
    font-size: var(--text-md);
    padding: 0.75rem 2rem;
    border-radius: 10rem;
    position: relative;
    transition:
      box-shadow 0.35s,
      top 0.3s,
      transform 0.45s;
    top: 0;
    left: 0;
    text-align: center;
    box-shadow:
      0 1px 0 0 var(--color-gray-800),
      0 2px 0 0 var(--color-gray-800),
      0 3px 0 0 var(--color-gray-800);
    transform: rotateX(0) rotateY(0) rotateZ(0);

    &:hover {
      box-shadow:
        0 0 0 0 var(--color-gray-800),
        0 0 0 0 var(--color-gray-800),
        0 0 0 0 var(--color-gray-800);
      top: 3px;
      transform: rotateX(5deg) rotateY(10deg) rotateZ(0.5deg);
    }

    &:focus-visible {
      --outline-background: var(--color-gray-100);

      box-shadow:
        0 0 0 0 var(--color-gray-800),
        0 0 0 0 var(--color-gray-800),
        0 0 0 0 var(--color-gray-800),
        0 0 0 2px var(--outline-background),
        0 0 0 4px var(--color-gray-800);
      top: 3px;
      border: 2px solid var(--color-gray-800) !important;
      outline: 0;
    }

    @media (min-width: 48em) {
        font-size: var(--text-lg);
    }
  }
</style>
