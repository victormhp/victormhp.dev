---
import Icon from "./Icon.astro";
import Resume from "./Resume.astro";
import { socialsArray, pages } from "../config.ts";
---

<nav
  class="font-brand z-10 w-full border-b-3 border-gray-800 bg-gray-50 p-4 md:flex md:items-center md:justify-between md:gap-4 md:px-10 md:py-2"
>
  <div class="flex items-center justify-between gap-2">
    <a
      id="logo"
      class="flex items-center gap-2 transition-transform duration-300 hover:scale-110"
      href="/"
      title="Ir a la página principal"
      aria-label="Ir a la página principal"
    >
      <Icon icon="code" color="#73162f" size="2.5em" />
      <span class="text-2xl">victor.dev</span>
    </a>
    <button
      id="hamburger"
      class="aria-expanded:text-dark focus-visible:text-dark relative z-50 flex border-0 bg-transparent p-0.5 md:hidden"
    >
      <span class="sr-only">Menu</span>
      <Icon icon="list" color="#73162f" size="1.75em" />
    </button>
  </div>
  <div
    id="nav-menu"
    class="fixed top-0 left-0 z-40 flex h-full w-full translate-x-full flex-col bg-gray-50 transition-transform md:contents"
  >
    <ul
      class="m-0 flex flex-1 flex-col items-center justify-center gap-16 p-8 text-2xl md:flex-row md:justify-end md:border-0 md:p-4 md:text-xl"
    >
      {
        pages.map(({ label, href }) => (
          <li class="page hover:underline-lift focus-visible:underline-lift transition-all">
            <a class="link text-gray-800" {href}>
              {label}
            </a>
          </li>
        ))
      }
      <li>
        <Resume>Resume</Resume>
      </li>
    </ul>
    <div
      class="flex justify-around gap-4 border-t-2 border-gray-800 bg-gray-50 p-4 text-2xl md:hidden"
    >
      {
        socialsArray.map(({ href, icon, label }) => (
          <a
            class="flex p-2 text-gray-800 transition-colors"
            href={href}
            target="_blank"
            rel="noopener noreferrer"
          >
            <span class="sr-only">{label}</span>
            <Icon icon={icon} size="1.5em" />
          </a>
        ))
      }
    </div>
  </div>
</nav>

<script>
  const pages = document.querySelectorAll(".page");
  for (const p of pages) {
    const link = p.querySelector("a").href;
    if (link == window.location.href) {
      p.classList.add("underline-lift");
    }
  }

  function isMenuOpen(): boolean {
    return document.body.getAttribute("data-menu-open") == "true";
  }

  function initLogoBehavior() {
    const logo = document.querySelector("#logo");

    logo.addEventListener("click", (event) => {
      if (window.location.pathname == logo.getAttribute("href")) {
        event.preventDefault();
      }
    });
  }

  function initMobileMenu() {
    const btn = document.querySelector("#hamburger");
    const menu = document.querySelector("#nav-menu");
    const navLinks = document.querySelectorAll(".link");

    const toggleMenu = () => {
      const isOpen = isMenuOpen();
      const menuState = isOpen ? "false" : "true";

      document.body.setAttribute("data-menu-open", menuState);
      btn.setAttribute("aria-expanded", menuState);

      menu.classList.toggle("translate-x-full");
      menu.classList.toggle("translate-x-0");
    };

    btn.addEventListener("click", () => toggleMenu());

    navLinks.forEach((link) => {
      const page = link.getAttribute("href");
      link.addEventListener("click", (event) => {
        if (page == window.location.pathname) {
          event.preventDefault();
        }

        if (isMenuOpen()) {
          event.preventDefault();
          toggleMenu();
        }
      });
    });
  }

  initLogoBehavior();
  initMobileMenu();
</script>

<style>
  :global(body[data-menu-open="true"]) {
    overflow-y: hidden;
  }
</style>
