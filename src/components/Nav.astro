---
import Icon from "./Icon.astro";
import Resume from "./Resume.astro";
import { socialsArray, pages } from "../config.ts";

const currentPage = Astro.url.pathname;
---

<nav
  class="font-brand z-10 my-auto w-full border-b-2 border-gray-800 bg-gray-50 px-2 md:flex md:items-center md:justify-between md:gap-4 md:px-8 md:py-2"
>
  <div class="md:pd-0 flex justify-between gap-2 px-2 py-4">
    <a class="hover:text-dark focus-visible:text-dark flex items-center gap-2 transition-colors text-xl" href="/">
      <Icon icon="terminal" size="1.6em" />
      Victor.dev
    </a>
    <button
      id="hamburger"
      class="aria-expanded:text-dark focus-visible:text-dark relative z-50 flex border-0 bg-transparent p-0.5 md:hidden"
    >
      <span class="sr-only">Menu</span>
      <Icon icon="list" size="1.5em" />
    </button>
  </div>
  <div
    id="nav-menu"
    class="fixed top-0 left-0 z-40 flex h-full w-full translate-x-full flex-col bg-gray-50 transition-transform md:contents"
  >
    <ul
      class="m-0 flex flex-1 flex-col items-center justify-center gap-16 p-8 text-2xl md:flex-row md:justify-end md:border-0 md:p-4 md:text-base"
    >
      {
        pages.map(({ label, href }) => (
          <li
            class:list={["hover:underline-lift focus-visible:underline-lift transition-all", currentPage == href ? "underline-lift" : ""]}
          >
            <a class="text-gray-800" {href}>
              {label}
            </a>
          </li>
        ))
      }
      <div>
        <Resume>Resume</Resume>
      </div>
    </ul>
    <div class="flex justify-around gap-4 border-t-2 border-gray-800 bg-gray-50 p-4 text-2xl md:hidden">
      {
        socialsArray.map(({ href, icon, label }) => (
          <a class="link flex p-2 text-gray-800 transition-colors" href={href} target="_blank" rel="noopener noreferrer">
            <span class="sr-only">{label}</span>
            <Icon icon={icon} size="1.5em" />
          </a>
        ))
      }
    </div>
  </div>
</nav>

<script>
  function initMobileMenu() {
    const body = document.body;
    const btn = document.querySelector("#hamburger");
    const menu = document.querySelector("#nav-menu");
    const navLinks = document.querySelectorAll(".link");

    const isMenuOpened = (): boolean => {
      return body.getAttribute("data-menu-open") == "true";
    };

    const toggleMenu = () => {
      if (isMenuOpened()) {
        body.setAttribute("data-menu-open", "false");
        btn.setAttribute("aria-expanded", "false");
      } else {
        body.setAttribute("data-menu-open", "true");
        btn.setAttribute("aria-expanded", "true");
      }
      menu.classList.toggle("translate-x-full");
      menu.classList.toggle("translate-x-0");
    };

    btn.addEventListener("click", () => toggleMenu());

    navLinks.forEach((link) => {
      link.addEventListener("click", (event) => {
        if (isMenuOpened()) {
          event.preventDefault();
          toggleMenu();
        }
      });
    });
  }

  document.addEventListener("astro:after-swap", () => initMobileMenu());
  initMobileMenu();
</script>

<style>
  :global(body[data-menu-open]) {
    overflow-y: hidden;
  }
</style>
